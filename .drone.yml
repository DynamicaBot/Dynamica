---
kind: "pipeline"
name: "Build"
type: "docker"

steps:
  - name: Restore Cache
    pull: if-not-exists
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
  - name: "Build"
    image: "node:lts-buster-slim"
    pull: if-not-exists
    commands:
      - apt-get update
      - apt-get install openssl -y -qq
      - yarn install --frozen-lockfile
      - yarn tsc
  - name: Rebuild Cache
    pull: if-not-exists
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules

volumes:
  - name: cache
    host:
      path: /tmp/cache
---
kind: "pipeline"
name: "Publish Github Release"
type: "docker"
trigger:
  when:
    event:
      - tag
    branch:
      - master
steps:
  - name: Restore Cache
    pull: if-not-exists
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules

  - name: "Build"
    image: "node:lts-buster-slim"
    pull: if-not-exists
    commands:
      - apt-get update
      - apt-get install openssl -y -qq
      - yarn install --frozen-lockfile
      - yarn build

  - name: Rebuild Cache
    pull: if-not-exists
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
  - name: Package Files
    pull: if-not-exists
    image: node:lts-buster-slim
    when:
      event:
        - tag
      branch:
        - master
    commands:
      - apt-get update
      - apt-get install zip -y -qq
      - zip -r release.zip dist package.json yarn.lock
  - name: Publish Code on github release
    pull: if-not-exists
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files: release.zip
volumes:
  - name: cache
    host:
      path: /tmp/cache
---
kind: "pipeline"
name: "Publish GHCR.io Release"
type: "docker"
trigger:
  when:
    event:
      - tag
    branch:
      - master
steps:
  - name: Publish Bot on ghcr.io
    pull: if-not-exists
    image: plugins/docker
    when:
      branch:
        - master
      event:
        - tag
    settings:
      tags: latest
      target: runner
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/dynamicabot/dynamica
      auto_tag: true
      registry: ghcr.io
      cache_from: ghcr.io/dynamicabot/dynamica
volumes:
  - name: cache
    host:
      path: /tmp/cache
---
kind: signature
hmac: da207c026c9068332d85460d7f63e501a662e8c5f093038605c79ed157472942

...
